cmake_minimum_required(VERSION 2.6.4)

### PROJECT AND VERSION
project(GetSet)
set(GETSET_VERSION_MAJOR 0)
set(GETSET_VERSION_MINOR 9)
set(GETSET_VERSION_PATCH 1)
set(GETSET_VERSION ${GETSET_VERSION_MAJOR}.${GETSET_VERSION_MINOR}.${GETSET_VERSION_PATCH} )

### EXTERNAL DEPENDENCIES
find_package(Qt4 REQUIRED)
include(${QT_USE_FILE})
add_definitions(${QT_DEFINITIONS})

### Distinguish debug/realse binaries
set(CMAKE_DEBUG_POSTFIX "d")

### DIRECTORIES
set(LIB_INSTALL_DIR "lib")
set(CMAKECONFIG_INSTALL_DIR ".")
set(INCLUDE_INSTALL_DIR "include")
set(BIN_INSTALL_DIR "bin")
# All binaries go into the top level, not their respective subfolders
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})

### SOURCE CODE
add_subdirectory(GetSet)
add_subdirectory(GetSetGui)
add_subdirectory(Apps)

# Export all targets into the export set "GetSetExport".
install(EXPORT GetSetExport DESTINATION ${CMAKECONFIG_INSTALL_DIR} FILE GetSetTargets.cmake )

# Create GetSetConfig.cmake and GetSetConfigVersion.cmake files for find_package()
configure_file(GetSetConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/GetSetConfig.cmake @ONLY )
configure_file(GetSetConfigVersion.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/GetSetConfigVersion.cmake @ONLY )

# Install these two files into the same directory as the generated exports-file.
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/GetSetConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/GetSetConfigVersion.cmake DESTINATION ${CMAKECONFIG_INSTALL_DIR})
# Add license
install(FILES License.txt DESTINATION ${CMAKECONFIG_INSTALL_DIR})
